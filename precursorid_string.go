// Code generated by "stringer -type=PrecursorID"; DO NOT EDIT.

package molekcheatez

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidPrecursor-0]
	_ = x[Water-1]
	_ = x[Ammonia-2]
	_ = x[HydrochloricAcid-3]
	_ = x[SulfuricAcid-4]
	_ = x[Acetone-5]
	_ = x[Cyclohexane-6]
	_ = x[Methanol-7]
	_ = x[EthyleneGlycol-8]
	_ = x[Propene-9]
	_ = x[AceticAcid-10]
	_ = x[Benzene-11]
	_ = x[Carbamide-12]
	_ = x[PhosphoricAcid-13]
	_ = x[HydrofluoricAcid-14]
	_ = x[Hydrazine-15]
	_ = x[Butanone-16]
	_ = x[ThionylChloride-17]
	_ = x[Dioxane-18]
	_ = x[Toluene-19]
	_ = x[FormicAcid-20]
	_ = x[Butylene-21]
	_ = x[Isobutane-22]
	_ = x[Triazine-23]
}

const _PrecursorID_name = "InvalidPrecursorWaterAmmoniaHydrochloricAcidSulfuricAcidAcetoneCyclohexaneMethanolEthyleneGlycolPropeneAceticAcidBenzeneCarbamidePhosphoricAcidHydrofluoricAcidHydrazineButanoneThionylChlorideDioxaneTolueneFormicAcidButyleneIsobutaneTriazine"

var _PrecursorID_index = [...]uint8{0, 16, 21, 28, 44, 56, 63, 74, 82, 96, 103, 113, 120, 129, 143, 159, 168, 176, 191, 198, 205, 215, 223, 232, 240}

func (i PrecursorID) String() string {
	if i < 0 || i >= PrecursorID(len(_PrecursorID_index)-1) {
		return "PrecursorID(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PrecursorID_name[_PrecursorID_index[i]:_PrecursorID_index[i+1]]
}
